# -*- coding: utf-8 -*-
"""Fuzzy Logic Matching

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mylrrnsvc-rgSYTcl0d_cx5rVQ0vujOj
"""

!pip install --upgrade gspread

!pip install fuzzywuzzy

!pip install python-Levenshtein

from google.colab import auth
auth.authenticate_user()

import gspread
from google.auth import default
creds, _ = default()
import pandas as pd
from fuzzywuzzy import fuzz
from fuzzywuzzy import process

gc = gspread.authorize(creds)

ss = gc.open_by_key('1P49aXnglaf_4EcJbszUdavnOJSzv6RR1lWrRfjedKcE')

wsTable = ss.worksheet("Table")
# get_all_values gives a list of rows.
rows = wsTable.get_all_values()

# Convert to a DataFrame and render.
dfTable = pd.DataFrame.from_records(rows[1:],columns=rows[0])
print(dfTable)

wsTestTable = ss.worksheet("TestTable")
# get_all_values gives a list of rows.
rowsT = wsTestTable.get_all_values()

# Convert to a DataFrame and render.
dfTestTable = pd.DataFrame.from_records(rowsT[1:],columns=rowsT[0])
print(dfTestTable)

def cleanCompanies(series):
  return series.str.lower().str.replace(r"[^a-z\s]","").str.strip()

dfTestTable["coClean"] = cleanCompanies(dfTestTable["Companies M"])

dfTable["coClean"] = cleanCompanies(dfTable["Companies"])

choices = dfTestTable["coClean"].tolist()

def fm(row):
  matches = process.extract(row["coClean"],choices,limit=3)
  exactMatchBool = matches[0][1] == 100
  row["Match"] = matches[0][0]
  row["Match Score"] = matches[0][1]
  return row

dfMatching = dfTable.apply(fm,axis=1)

wsMatching = ss.worksheet('Matching')

listScores = [dfMatching.columns.tolist()] + dfMatching.to_numpy().tolist()

wsMatching.update("A1",listScores)